{
	"Parameters": {
		"KeyName": {
			"Description": "Name of an existing EC2 KeyPair to enable SSH access to the instances",
			"Type": "String"
		},

		"InstanceType": {
			"Description": "FormEngine EC2 instance type",
			"Type": "String",
			"Default": "t2.micro"
		}
	},
	"Resources": {
		"WebServerGroup": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"GroupDescription": "Enable SSH and HTTP access",
				"SecurityGroupIngress": [{
						"IpProtocol": "tcp",
						"FromPort": "22",
						"ToPort": "22",
						"CidrIp": "0.0.0.0/0"
					},
					{
						"IpProtocol": "tcp",
						"FromPort": "80",
						"ToPort": "80",
						"CidrIp": "0.0.0.0/0"
					}
				]
			}
		},
		"WebServer": {
			"Type": "AWS::EC2::Instance",
			"Metadata": {
				"AWS::CloudFormation::Init": {
					"config": {
						"packages": {
							"yum": {
								"java-1.6.0-openjdk": [],
								"tomcat6": [],
								"httpd": []
							}
						},
						"files": {
							"/usr/share/tomcat6/webapps/webapp1.war": {
								"source": "https://github.com/vishalrajeev/test-cloud-formation/blob/master/javanew.war",
								"mode": "000500",
								"owner": "tomcat",
								"group": "tomcat"
							}
						}
					}
				}
			},
			"Properties": {
				"ImageId": "ami-0ce933e2ae91880d3",
				"InstanceType": {
					"Ref": "InstanceType"
				},
				"SecurityGroups": [{
					"Ref": "WebServerGroup"
				}],
				"KeyName": {
					"Ref": "KeyName"
				},
				"Tags": [{
					"Key": "Name",
					"Value": "WebServer"
				}],
				"UserData": {
					"Fn::Base64": {
						"Fn::Join": ["", [
							"#!/bin/bash -v\n",
							"date > /home/ec2-user/starttime\n",
							"yum update -y aws-cfn-bootstrap\n",

							"## Error reporting helper function\n",
							"function error_exit\n",
							"{\n",
							"   /opt/aws/bin/cfn-signal -e 1 -r \"$1\" '", {
								"Ref": "WaitHandle"
							}, "'\n",
							"   exit 1\n",
							"}\n",

							"## Initialize CloudFormation bits\n",
							"/opt/aws/bin/cfn-init -v -s ", {
								"Ref": "AWS::StackName"
							}, " -r FormEngine",

							"# Add Tomcat user to sudoers and disable tty\n",
							"echo \"tomcat ALL=(ALL) NOPASSWD:ALL\" >> /etc/sudoers\n",
							"echo \"Defaults:%tomcat !requiretty\" >> /etc/sudoers\n",
							"echo \"Defaults:tomcat !requiretty\" >> /etc/sudoers\n",

							"# Set JVM settings\n",
							"echo \"JAVA_OPTS='${JAVA_OPTS} -Xms512m -Xmx512m -XX:PermSize=256m -XX:MaxPermSize=512m'\" >> /etc/tomcat6/tomcat6.conf\n",

							"# Tomcat Setup\n",
							"chown -R tomcat:tomcat /usr/share/tomcat6/\n",
							"chkconfig tomcat6 on\n",
							"chkconfig --level 345 tomcat6 on\n",

							"# Configure Apache HTTPD\n",
							"chkconfig httpd on\n",
							"chkconfig --level 345 httpd on\n",

							"# Proxy all requests to Tomcat\n",
							"echo \"ProxyPass  / ajp://localhost:8009/\" >> /etc/httpd/conf/httpd.conf\n",

							"# Start servers\n",
							"service tomcat6 start\n",
							"/etc/init.d/httpd start\n",

							"# Send signal to WaitHandle that the setup is completed\n",
							"/opt/aws/bin/cfn-signal", " -e 0", " '", {
								"Ref": "WaitHandle"
							}, "'", "\n",

							"date > /home/ec2-user/stoptime"
						]]
					}
				}
			}
		},
		"IPAddress": {
			"Type": "AWS::EC2::EIP"
		},

		"IPAssoc": {
			"Type": "AWS::EC2::EIPAssociation",
			"Properties": {
				"InstanceId": {
					"Ref": "WebServer"
				},
				"EIP": {
					"Ref": "IPAddress"
				}
			}
		},
		"WaitHandle": {
			"Type": "AWS::CloudFormation::WaitConditionHandle"
		},

		"WaitCondition": {
			"Type": "AWS::CloudFormation::WaitCondition",
			"DependsOn": "WebServer",
			"Properties": {
				"Handle": {
					"Ref": "WaitHandle"
				},
				"Timeout": "1200"
			}
		}
	},
	"Outputs": {
		"InstanceIPAddress": {
			"Value": {
				"Ref": "IPAddress"
			},
			"Description": "public IP address of the new WebServer"
		},
		"InstanceName": {
			"Value": {
				"Fn::GetAtt": ["WebServer", "PublicDnsName"]
			},
			"Description": "public DNS name of the new WebServer"
		}
	}
}
